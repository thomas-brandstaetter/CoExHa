-----------------------------------------------------------------------------
Info file generated by Happy Version 1.18.10 from src/defs/parser.y
-----------------------------------------------------------------------------


terminal return is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_mycehParser -> Program                      (0)
	Program -> Block "."                               (1)
	Block -> BlockConsts BlockVars BlockProcedure BlockStatement   (2)
	BlockConsts -> const Consts ";"                    (3)
	BlockConsts ->                                     (4)
	Consts -> identifier "=" number                    (5)
	Consts -> identifier "=" number "," Consts         (6)
	BlockVars -> var Vars ";"                          (7)
	BlockVars ->                                       (8)
	Vars -> identifier                                 (9)
	Vars -> identifier "," Vars                        (10)
	BlockProcedure -> procedure identifier ";" Block ";"   (11)
	BlockStatement -> Statement                        (12)
	Statement -> identifier ":=" Expression            (13)
	Statement -> call identifier                       (14)
	Statement -> begin Statement end                   (15)
	Statement -> begin Statement ";" Statement end     (16)
	Statement -> if Condition then Statement           (17)
	Statement -> while Condition do Statement          (18)
	Condition -> "odd" Expression                      (19)
	Condition -> Expression "=" Expression             (20)
	Condition -> Expression "#" Expression             (21)
	Condition -> Expression "<" Expression             (22)
	Condition -> Expression "<=" Expression            (23)
	Condition -> Expression ">" Expression             (24)
	Condition -> Expression "=>" Expression            (25)
	Expression -> "+" Term                             (26)
	Expression -> "-" Term                             (27)
	Expression -> "+" Term Expression                  (28)
	Expression -> "-" Term Expression                  (29)
	Term -> Factor "*" Factor                          (30)
	Term -> Factor "/" Factor                          (31)
	Factor -> identifier                               (32)
	Factor -> number                                   (33)
	Factor -> "(" Expression ")"                       (34)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	return         { TReturn _ }
	begin          { TBegin _ }
	end            { TEnd _ }
	var            { TVar _ }
	const          { TConst _ }
	procedure      { TProcedure _ }
	while          { TWhile _ }
	do             { TDo _ }
	if             { TIf _ }
	then           { TThen _ }
	call           { TCall _ }
	"odd"          { TOdd _ }
	"#"            { TNotEqual _ }
	":="           { TAssign _ }
	"<"            { TLess _ }
	">"            { TGreater _ }
	"<="           { TLessOrEqual _ }
	"=>"           { TGreaterOrEqual _ }
	";"            { TSemicolon _ }
	","            { TComma _ }
	"+"            { TPlus _ }
	"-"            { TMinus _ }
	"="            { TEqual _ }
	"*"            { TStar _ }
	"/"            { TDivide _ }
	"."            { TDot _ }
	"("            { TOpenParenthesis _ }
	")"            { TCloseParenthesis _ }
	identifier     { TIdentifier _ $$ }
	number         { TNumber _ $$ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_mycehParser rule  0
	Program         rule  1
	Block           rule  2
	BlockConsts     rules 3, 4
	Consts          rules 5, 6
	BlockVars       rules 7, 8
	Vars            rules 9, 10
	BlockProcedure  rule  11
	BlockStatement  rule  12
	Statement       rules 13, 14, 15, 16, 17, 18
	Condition       rules 19, 20, 21, 22, 23, 24, 25
	Expression      rules 26, 27, 28, 29
	Term            rules 30, 31
	Factor          rules 32, 33, 34

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	var            reduce using rule 4
	const          shift, and enter state 4
	procedure      reduce using rule 4

	Program        goto state 5
	Block          goto state 2
	BlockConsts    goto state 3

State 1


	const          shift, and enter state 4

	Block          goto state 2
	BlockConsts    goto state 3

State 2

	Program -> Block . "."                              (rule 1)

	"."            shift, and enter state 10


State 3

	Block -> BlockConsts . BlockVars BlockProcedure BlockStatement    (rule 2)

	var            shift, and enter state 9
	procedure      reduce using rule 8

	BlockVars      goto state 8

State 4

	BlockConsts -> const . Consts ";"                   (rule 3)

	identifier     shift, and enter state 7

	Consts         goto state 6

State 5

	%start_mycehParser -> Program .                     (rule 0)

	%eof           accept


State 6

	BlockConsts -> const Consts . ";"                   (rule 3)

	";"            shift, and enter state 16


State 7

	Consts -> identifier . "=" number                   (rule 5)
	Consts -> identifier . "=" number "," Consts        (rule 6)

	"="            shift, and enter state 15


State 8

	Block -> BlockConsts BlockVars . BlockProcedure BlockStatement    (rule 2)

	procedure      shift, and enter state 14

	BlockProcedure goto state 13

State 9

	BlockVars -> var . Vars ";"                         (rule 7)

	identifier     shift, and enter state 12

	Vars           goto state 11

State 10

	Program -> Block "." .                              (rule 1)

	%eof           reduce using rule 1


State 11

	BlockVars -> var Vars . ";"                         (rule 7)

	";"            shift, and enter state 27


State 12

	Vars -> identifier .                                (rule 9)
	Vars -> identifier . "," Vars                       (rule 10)

	";"            reduce using rule 9
	","            shift, and enter state 26


State 13

	Block -> BlockConsts BlockVars BlockProcedure . BlockStatement    (rule 2)

	begin          shift, and enter state 21
	while          shift, and enter state 22
	if             shift, and enter state 23
	call           shift, and enter state 24
	identifier     shift, and enter state 25

	BlockStatement goto state 19
	Statement      goto state 20

State 14

	BlockProcedure -> procedure . identifier ";" Block ";"    (rule 11)

	identifier     shift, and enter state 18


State 15

	Consts -> identifier "=" . number                   (rule 5)
	Consts -> identifier "=" . number "," Consts        (rule 6)

	number         shift, and enter state 17


State 16

	BlockConsts -> const Consts ";" .                   (rule 3)

	var            reduce using rule 3
	procedure      reduce using rule 3


State 17

	Consts -> identifier "=" number .                   (rule 5)
	Consts -> identifier "=" number . "," Consts        (rule 6)

	";"            reduce using rule 5
	","            shift, and enter state 39


State 18

	BlockProcedure -> procedure identifier . ";" Block ";"    (rule 11)

	";"            shift, and enter state 38


State 19

	Block -> BlockConsts BlockVars BlockProcedure BlockStatement .    (rule 2)

	";"            reduce using rule 2
	"."            reduce using rule 2


State 20

	BlockStatement -> Statement .                       (rule 12)

	";"            reduce using rule 12
	"."            reduce using rule 12


State 21

	Statement -> begin . Statement end                  (rule 15)
	Statement -> begin . Statement ";" Statement end    (rule 16)

	begin          shift, and enter state 21
	while          shift, and enter state 22
	if             shift, and enter state 23
	call           shift, and enter state 24
	identifier     shift, and enter state 25

	Statement      goto state 37

State 22

	Statement -> while . Condition do Statement         (rule 18)

	"odd"          shift, and enter state 33
	"+"            shift, and enter state 34
	"-"            shift, and enter state 35

	Condition      goto state 36
	Expression     goto state 32

State 23

	Statement -> if . Condition then Statement          (rule 17)

	"odd"          shift, and enter state 33
	"+"            shift, and enter state 34
	"-"            shift, and enter state 35

	Condition      goto state 31
	Expression     goto state 32

State 24

	Statement -> call . identifier                      (rule 14)

	identifier     shift, and enter state 30


State 25

	Statement -> identifier . ":=" Expression           (rule 13)

	":="           shift, and enter state 29


State 26

	Vars -> identifier "," . Vars                       (rule 10)

	identifier     shift, and enter state 12

	Vars           goto state 28

State 27

	BlockVars -> var Vars ";" .                         (rule 7)

	procedure      reduce using rule 7


State 28

	Vars -> identifier "," Vars .                       (rule 10)

	";"            reduce using rule 10


State 29

	Statement -> identifier ":=" . Expression           (rule 13)

	"+"            shift, and enter state 34
	"-"            shift, and enter state 35

	Expression     goto state 59

State 30

	Statement -> call identifier .                      (rule 14)

	end            reduce using rule 14
	";"            reduce using rule 14
	"."            reduce using rule 14


State 31

	Statement -> if Condition . then Statement          (rule 17)

	then           shift, and enter state 58


State 32

	Condition -> Expression . "=" Expression            (rule 20)
	Condition -> Expression . "#" Expression            (rule 21)
	Condition -> Expression . "<" Expression            (rule 22)
	Condition -> Expression . "<=" Expression           (rule 23)
	Condition -> Expression . ">" Expression            (rule 24)
	Condition -> Expression . "=>" Expression           (rule 25)

	"#"            shift, and enter state 52
	"<"            shift, and enter state 53
	">"            shift, and enter state 54
	"<="           shift, and enter state 55
	"=>"           shift, and enter state 56
	"="            shift, and enter state 57


State 33

	Condition -> "odd" . Expression                     (rule 19)

	"+"            shift, and enter state 34
	"-"            shift, and enter state 35

	Expression     goto state 51

State 34

	Expression -> "+" . Term                            (rule 26)
	Expression -> "+" . Term Expression                 (rule 28)

	"("            shift, and enter state 47
	identifier     shift, and enter state 48
	number         shift, and enter state 49

	Term           goto state 50
	Factor         goto state 46

State 35

	Expression -> "-" . Term                            (rule 27)
	Expression -> "-" . Term Expression                 (rule 29)

	"("            shift, and enter state 47
	identifier     shift, and enter state 48
	number         shift, and enter state 49

	Term           goto state 45
	Factor         goto state 46

State 36

	Statement -> while Condition . do Statement         (rule 18)

	do             shift, and enter state 44


State 37

	Statement -> begin Statement . end                  (rule 15)
	Statement -> begin Statement . ";" Statement end    (rule 16)

	end            shift, and enter state 42
	";"            shift, and enter state 43


State 38

	BlockProcedure -> procedure identifier ";" . Block ";"    (rule 11)

	var            reduce using rule 4
	const          shift, and enter state 4
	procedure      reduce using rule 4

	Block          goto state 41
	BlockConsts    goto state 3

State 39

	Consts -> identifier "=" number "," . Consts        (rule 6)

	identifier     shift, and enter state 7

	Consts         goto state 40

State 40

	Consts -> identifier "=" number "," Consts .        (rule 6)

	";"            reduce using rule 6


State 41

	BlockProcedure -> procedure identifier ";" Block . ";"    (rule 11)

	";"            shift, and enter state 74


State 42

	Statement -> begin Statement end .                  (rule 15)

	end            reduce using rule 15
	";"            reduce using rule 15
	"."            reduce using rule 15


State 43

	Statement -> begin Statement ";" . Statement end    (rule 16)

	begin          shift, and enter state 21
	while          shift, and enter state 22
	if             shift, and enter state 23
	call           shift, and enter state 24
	identifier     shift, and enter state 25

	Statement      goto state 73

State 44

	Statement -> while Condition do . Statement         (rule 18)

	begin          shift, and enter state 21
	while          shift, and enter state 22
	if             shift, and enter state 23
	call           shift, and enter state 24
	identifier     shift, and enter state 25

	Statement      goto state 72

State 45

	Expression -> "-" Term .                            (rule 27)
	Expression -> "-" Term . Expression                 (rule 29)

	end            reduce using rule 27
	do             reduce using rule 27
	then           reduce using rule 27
	"#"            reduce using rule 27
	"<"            reduce using rule 27
	">"            reduce using rule 27
	"<="           reduce using rule 27
	"=>"           reduce using rule 27
	";"            reduce using rule 27
	"+"            shift, and enter state 34
	"-"            shift, and enter state 35
	"="            reduce using rule 27
	"."            reduce using rule 27
	")"            reduce using rule 27

	Expression     goto state 71

State 46

	Term -> Factor . "*" Factor                         (rule 30)
	Term -> Factor . "/" Factor                         (rule 31)

	"*"            shift, and enter state 69
	"/"            shift, and enter state 70


State 47

	Factor -> "(" . Expression ")"                      (rule 34)

	"+"            shift, and enter state 34
	"-"            shift, and enter state 35

	Expression     goto state 68

State 48

	Factor -> identifier .                              (rule 32)

	end            reduce using rule 32
	do             reduce using rule 32
	then           reduce using rule 32
	"#"            reduce using rule 32
	"<"            reduce using rule 32
	">"            reduce using rule 32
	"<="           reduce using rule 32
	"=>"           reduce using rule 32
	";"            reduce using rule 32
	"+"            reduce using rule 32
	"-"            reduce using rule 32
	"="            reduce using rule 32
	"*"            reduce using rule 32
	"/"            reduce using rule 32
	"."            reduce using rule 32
	")"            reduce using rule 32


State 49

	Factor -> number .                                  (rule 33)

	end            reduce using rule 33
	do             reduce using rule 33
	then           reduce using rule 33
	"#"            reduce using rule 33
	"<"            reduce using rule 33
	">"            reduce using rule 33
	"<="           reduce using rule 33
	"=>"           reduce using rule 33
	";"            reduce using rule 33
	"+"            reduce using rule 33
	"-"            reduce using rule 33
	"="            reduce using rule 33
	"*"            reduce using rule 33
	"/"            reduce using rule 33
	"."            reduce using rule 33
	")"            reduce using rule 33


State 50

	Expression -> "+" Term .                            (rule 26)
	Expression -> "+" Term . Expression                 (rule 28)

	end            reduce using rule 26
	do             reduce using rule 26
	then           reduce using rule 26
	"#"            reduce using rule 26
	"<"            reduce using rule 26
	">"            reduce using rule 26
	"<="           reduce using rule 26
	"=>"           reduce using rule 26
	";"            reduce using rule 26
	"+"            shift, and enter state 34
	"-"            shift, and enter state 35
	"="            reduce using rule 26
	"."            reduce using rule 26
	")"            reduce using rule 26

	Expression     goto state 67

State 51

	Condition -> "odd" Expression .                     (rule 19)

	do             reduce using rule 19
	then           reduce using rule 19


State 52

	Condition -> Expression "#" . Expression            (rule 21)

	"+"            shift, and enter state 34
	"-"            shift, and enter state 35

	Expression     goto state 66

State 53

	Condition -> Expression "<" . Expression            (rule 22)

	"+"            shift, and enter state 34
	"-"            shift, and enter state 35

	Expression     goto state 65

State 54

	Condition -> Expression ">" . Expression            (rule 24)

	"+"            shift, and enter state 34
	"-"            shift, and enter state 35

	Expression     goto state 64

State 55

	Condition -> Expression "<=" . Expression           (rule 23)

	"+"            shift, and enter state 34
	"-"            shift, and enter state 35

	Expression     goto state 63

State 56

	Condition -> Expression "=>" . Expression           (rule 25)

	"+"            shift, and enter state 34
	"-"            shift, and enter state 35

	Expression     goto state 62

State 57

	Condition -> Expression "=" . Expression            (rule 20)

	"+"            shift, and enter state 34
	"-"            shift, and enter state 35

	Expression     goto state 61

State 58

	Statement -> if Condition then . Statement          (rule 17)

	begin          shift, and enter state 21
	while          shift, and enter state 22
	if             shift, and enter state 23
	call           shift, and enter state 24
	identifier     shift, and enter state 25

	Statement      goto state 60

State 59

	Statement -> identifier ":=" Expression .           (rule 13)

	end            reduce using rule 13
	";"            reduce using rule 13
	"."            reduce using rule 13


State 60

	Statement -> if Condition then Statement .          (rule 17)

	end            reduce using rule 17
	";"            reduce using rule 17
	"."            reduce using rule 17


State 61

	Condition -> Expression "=" Expression .            (rule 20)

	do             reduce using rule 20
	then           reduce using rule 20


State 62

	Condition -> Expression "=>" Expression .           (rule 25)

	do             reduce using rule 25
	then           reduce using rule 25


State 63

	Condition -> Expression "<=" Expression .           (rule 23)

	do             reduce using rule 23
	then           reduce using rule 23


State 64

	Condition -> Expression ">" Expression .            (rule 24)

	do             reduce using rule 24
	then           reduce using rule 24


State 65

	Condition -> Expression "<" Expression .            (rule 22)

	do             reduce using rule 22
	then           reduce using rule 22


State 66

	Condition -> Expression "#" Expression .            (rule 21)

	do             reduce using rule 21
	then           reduce using rule 21


State 67

	Expression -> "+" Term Expression .                 (rule 28)

	end            reduce using rule 28
	do             reduce using rule 28
	then           reduce using rule 28
	"#"            reduce using rule 28
	"<"            reduce using rule 28
	">"            reduce using rule 28
	"<="           reduce using rule 28
	"=>"           reduce using rule 28
	";"            reduce using rule 28
	"="            reduce using rule 28
	"."            reduce using rule 28
	")"            reduce using rule 28


State 68

	Factor -> "(" Expression . ")"                      (rule 34)

	")"            shift, and enter state 78


State 69

	Term -> Factor "*" . Factor                         (rule 30)

	"("            shift, and enter state 47
	identifier     shift, and enter state 48
	number         shift, and enter state 49

	Factor         goto state 77

State 70

	Term -> Factor "/" . Factor                         (rule 31)

	"("            shift, and enter state 47
	identifier     shift, and enter state 48
	number         shift, and enter state 49

	Factor         goto state 76

State 71

	Expression -> "-" Term Expression .                 (rule 29)

	end            reduce using rule 29
	do             reduce using rule 29
	then           reduce using rule 29
	"#"            reduce using rule 29
	"<"            reduce using rule 29
	">"            reduce using rule 29
	"<="           reduce using rule 29
	"=>"           reduce using rule 29
	";"            reduce using rule 29
	"="            reduce using rule 29
	"."            reduce using rule 29
	")"            reduce using rule 29


State 72

	Statement -> while Condition do Statement .         (rule 18)

	end            reduce using rule 18
	";"            reduce using rule 18
	"."            reduce using rule 18


State 73

	Statement -> begin Statement ";" Statement . end    (rule 16)

	end            shift, and enter state 75


State 74

	BlockProcedure -> procedure identifier ";" Block ";" .    (rule 11)

	begin          reduce using rule 11
	while          reduce using rule 11
	if             reduce using rule 11
	call           reduce using rule 11
	identifier     reduce using rule 11


State 75

	Statement -> begin Statement ";" Statement end .    (rule 16)

	end            reduce using rule 16
	";"            reduce using rule 16
	"."            reduce using rule 16


State 76

	Term -> Factor "/" Factor .                         (rule 31)

	end            reduce using rule 31
	do             reduce using rule 31
	then           reduce using rule 31
	"#"            reduce using rule 31
	"<"            reduce using rule 31
	">"            reduce using rule 31
	"<="           reduce using rule 31
	"=>"           reduce using rule 31
	";"            reduce using rule 31
	"+"            reduce using rule 31
	"-"            reduce using rule 31
	"="            reduce using rule 31
	"."            reduce using rule 31
	")"            reduce using rule 31


State 77

	Term -> Factor "*" Factor .                         (rule 30)

	end            reduce using rule 30
	do             reduce using rule 30
	then           reduce using rule 30
	"#"            reduce using rule 30
	"<"            reduce using rule 30
	">"            reduce using rule 30
	"<="           reduce using rule 30
	"=>"           reduce using rule 30
	";"            reduce using rule 30
	"+"            reduce using rule 30
	"-"            reduce using rule 30
	"="            reduce using rule 30
	"."            reduce using rule 30
	")"            reduce using rule 30


State 78

	Factor -> "(" Expression ")" .                      (rule 34)

	end            reduce using rule 34
	do             reduce using rule 34
	then           reduce using rule 34
	"#"            reduce using rule 34
	"<"            reduce using rule 34
	">"            reduce using rule 34
	"<="           reduce using rule 34
	"=>"           reduce using rule 34
	";"            reduce using rule 34
	"+"            reduce using rule 34
	"-"            reduce using rule 34
	"="            reduce using rule 34
	"*"            reduce using rule 34
	"/"            reduce using rule 34
	"."            reduce using rule 34
	")"            reduce using rule 34


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 35
Number of terminals: 30
Number of non-terminals: 14
Number of states: 79
